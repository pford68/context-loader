{
  "name": "aspectjs",
  "version": "1.1.11",
  "description": "A simple AOP implementation for Node.",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "underscore": "^1.8.2"
  },
  "devDependencies": {
    "jasmine-node": "^1.14.5"
  },
  "scripts": {
    "test": "jasmine-node test/spec"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/pford68/aspectjs"
  },
  "keywords": [
    "aop",
    "aspect-oriented",
    "aspect"
  ],
  "author": {
    "name": "Philip Ford"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/pford68/aspectjs/issues"
  },
  "homepage": "https://github.com/pford68/aspectjs/",
  "readme": "A simple AOP implementation for Node.  It works either with standalone functions or with object methods.  It can be used\non the client-side with Browserify too.\n\nExample\n\n```javascript\n\naspectjs.addAdvice(myGreatAdvice, \"someOtherMethod\").after(myGreatObject, \"someMethod\");\n\n// Thereafter whenever myGreatObject.someMethod is called, \n// myGreatAdvice.someOtherMethod will be called automatically afterward.\n\n```\n\n## API Documentation\n\n### Methods of aspectjs\n\n#### addAdvice([thisArg,] function|string)\nTakes either a standalone function, or a combination of an object and a string for a method name, that will be used for advice.\nReturns an Advice object.\n\n### Methods of the Advice object\n\n#### before(joinpoint, [methodname])\nAdds the advice in the Advice object before the specified join point.  The join point can be either a function \nor an object followed by a method name.  Returns the new wrapped function.\n\n#### after(joinpoint, [methodname])\nAdds the advice in the Advice object after the specified join point.  The join point can be either a function \nor an object followed by a method name.  Returns the new wrapped function.\n\n\n#### around(joinpoint, [methodname])\nAdds the advice in the Advice object around the specified join point.  The join point can be either a function\nor an object followed by a method name.  Returns the new wrapped function.\nThese method requires an advice function/method that takes an Invocation object.  Within the advice body,\ninvocation.proceed() should be called where the joinpoint should occur.\n\n```javascript\n\n// Example advice object for around advice\nadviser = {adviseFunction: function(invocation){\n    // Some code goes here.\n    invocation.proceed();   // Calls the original function.\n    // Some more code goes here.\n}};\n\n```\n\n\n## Usage\n### Standalone functions\nBoth the advice and joinpoints can be standalone functions:  \n\n``aspectjs.addAdvice(advice).before(joinpoint)``\n\nOr the advice can be an object method, while the joinpoint is standalone: \n\n``aspectjs.addAdvice(advice, 'methodname').after(joinpoint)``\n\n### Object methods\nBoth the advice and joinpoint can be object methods: \n\n``aspectjs.addAdvice(adviceObj, 'methodname').before(joinpointObj, 'methodname')``\n\n\n## Examples\n\n### Before advice\n``` javascript\n\nvar addAdvice = require(\"aspectjs\").addAdvice;\n\nvar advised, adviser, result;\nadvised = {\n   add: function(increment){this.left += increment; }, \n   id: 'test', \n   left: 32, \n   top: 43\n};\nadviser = {\n   override: function(increment){ advised.left = increment; }\n};\n\naddAdvice(adviser, \"override\").before(advised, \"add\");\nadvised.add(2);  // Should equal 4.  \n            \n```\n\n### Around advice\n```javascript\n\nvar advised, adviser, result;\nadvised = {\n   add: function(increment){\n       this.left += increment; \n   }, \n   id: 'test', \n   left: 32, \n   top: 43\n};\n\n// The advice function/method should take an Invocation object as input.\n// Then invocation.proceed() should be called where the joinpoint occurs.\nadviser = {\n   override: function(invocation){\n       advised.left += 5; // 37\n       invocation.proceed(); // 39\n       advised.left -= 19;\n   }\n};\n\naddAdvice(adviser, \"override\").around(advised, \"add\");\n\n````\n\n## Links\n* NPM:  https://www.npmjs.com/package/aspectjs/\n\n",
  "readmeFilename": "README.md",
  "gitHead": "a7083b727a54372913babf1462f4960dbe6c21a7",
  "_id": "aspectjs@1.1.11",
  "_shasum": "e316d97fc1463eace11ad3539262eec34a25f885",
  "_from": "aspectjs@"
}
